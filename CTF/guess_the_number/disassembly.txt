
guess-the-number:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64 
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 c1 2f 00 00 	mov    0x2fc1(%rip),%rax        # 3fd0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret    

Disassembly of section .plt:

0000000000001020 <puts@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   0x2fca(%rip)        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    *0x2fcc(%rip)        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    *0x2fca(%rip)        # 4000 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <__stack_chk_fail@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    *0x2fc2(%rip)        # 4008 <__stack_chk_fail@GLIBC_2.4>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <printf@plt>:
    1050:	ff 25 ba 2f 00 00    	jmp    *0x2fba(%rip)        # 4010 <printf@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <read@plt>:
    1060:	ff 25 b2 2f 00 00    	jmp    *0x2fb2(%rip)        # 4018 <read@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <srand@plt>:
    1070:	ff 25 aa 2f 00 00    	jmp    *0x2faa(%rip)        # 4020 <srand@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <__isoc99_scanf@plt>:
    1080:	ff 25 a2 2f 00 00    	jmp    *0x2fa2(%rip)        # 4028 <__isoc99_scanf@GLIBC_2.7>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <rand@plt>:
    1090:	ff 25 9a 2f 00 00    	jmp    *0x2f9a(%rip)        # 4030 <rand@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

00000000000010a0 <_start>:
    10a0:	f3 0f 1e fa          	endbr64 
    10a4:	31 ed                	xor    %ebp,%ebp
    10a6:	49 89 d1             	mov    %rdx,%r9
    10a9:	5e                   	pop    %rsi
    10aa:	48 89 e2             	mov    %rsp,%rdx
    10ad:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    10b1:	50                   	push   %rax
    10b2:	54                   	push   %rsp
    10b3:	45 31 c0             	xor    %r8d,%r8d
    10b6:	31 c9                	xor    %ecx,%ecx
    10b8:	48 8d 3d 20 01 00 00 	lea    0x120(%rip),%rdi        # 11df <main>
    10bf:	ff 15 fb 2e 00 00    	call   *0x2efb(%rip)        # 3fc0 <__libc_start_main@GLIBC_2.34>
    10c5:	f4                   	hlt    
    10c6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    10cd:	00 00 00 
    10d0:	48 8d 3d 71 2f 00 00 	lea    0x2f71(%rip),%rdi        # 4048 <__TMC_END__>
    10d7:	48 8d 05 6a 2f 00 00 	lea    0x2f6a(%rip),%rax        # 4048 <__TMC_END__>
    10de:	48 39 f8             	cmp    %rdi,%rax
    10e1:	74 15                	je     10f8 <_start+0x58>
    10e3:	48 8b 05 de 2e 00 00 	mov    0x2ede(%rip),%rax        # 3fc8 <_ITM_deregisterTMCloneTable@Base>
    10ea:	48 85 c0             	test   %rax,%rax
    10ed:	74 09                	je     10f8 <_start+0x58>
    10ef:	ff e0                	jmp    *%rax
    10f1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10f8:	c3                   	ret    
    10f9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1100:	48 8d 3d 41 2f 00 00 	lea    0x2f41(%rip),%rdi        # 4048 <__TMC_END__>
    1107:	48 8d 35 3a 2f 00 00 	lea    0x2f3a(%rip),%rsi        # 4048 <__TMC_END__>
    110e:	48 29 fe             	sub    %rdi,%rsi
    1111:	48 89 f0             	mov    %rsi,%rax
    1114:	48 c1 ee 3f          	shr    $0x3f,%rsi
    1118:	48 c1 f8 03          	sar    $0x3,%rax
    111c:	48 01 c6             	add    %rax,%rsi
    111f:	48 d1 fe             	sar    %rsi
    1122:	74 14                	je     1138 <_start+0x98>
    1124:	48 8b 05 ad 2e 00 00 	mov    0x2ead(%rip),%rax        # 3fd8 <_ITM_registerTMCloneTable@Base>
    112b:	48 85 c0             	test   %rax,%rax
    112e:	74 08                	je     1138 <_start+0x98>
    1130:	ff e0                	jmp    *%rax
    1132:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1138:	c3                   	ret    
    1139:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1140:	f3 0f 1e fa          	endbr64 
    1144:	80 3d fd 2e 00 00 00 	cmpb   $0x0,0x2efd(%rip)        # 4048 <__TMC_END__>
    114b:	75 33                	jne    1180 <_start+0xe0>
    114d:	55                   	push   %rbp
    114e:	48 83 3d 8a 2e 00 00 	cmpq   $0x0,0x2e8a(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1155:	00 
    1156:	48 89 e5             	mov    %rsp,%rbp
    1159:	74 0d                	je     1168 <_start+0xc8>
    115b:	48 8b 3d de 2e 00 00 	mov    0x2ede(%rip),%rdi        # 4040 <__dso_handle>
    1162:	ff 15 78 2e 00 00    	call   *0x2e78(%rip)        # 3fe0 <__cxa_finalize@GLIBC_2.2.5>
    1168:	e8 63 ff ff ff       	call   10d0 <_start+0x30>
    116d:	c6 05 d4 2e 00 00 01 	movb   $0x1,0x2ed4(%rip)        # 4048 <__TMC_END__>
    1174:	5d                   	pop    %rbp
    1175:	c3                   	ret    
    1176:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    117d:	00 00 00 
    1180:	c3                   	ret    
    1181:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    1188:	00 00 00 00 
    118c:	0f 1f 40 00          	nopl   0x0(%rax)
    1190:	f3 0f 1e fa          	endbr64 
    1194:	e9 67 ff ff ff       	jmp    1100 <_start+0x60>

0000000000001199 <xor_obfuscate>:
    1199:	55                   	push   %rbp
    119a:	48 89 e5             	mov    %rsp,%rbp
    119d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    11a1:	89 75 e4             	mov    %esi,-0x1c(%rbp)
    11a4:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
    11ab:	eb 26                	jmp    11d3 <xor_obfuscate+0x3a>
    11ad:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11b0:	48 63 d0             	movslq %eax,%rdx
    11b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11b7:	48 01 d0             	add    %rdx,%rax
    11ba:	0f b6 10             	movzbl (%rax),%edx
    11bd:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11c0:	48 63 c8             	movslq %eax,%rcx
    11c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    11c7:	48 01 c8             	add    %rcx,%rax
    11ca:	83 f2 11             	xor    $0x11,%edx
    11cd:	88 10                	mov    %dl,(%rax)
    11cf:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
    11d3:	8b 45 fc             	mov    -0x4(%rbp),%eax
    11d6:	3b 45 e4             	cmp    -0x1c(%rbp),%eax
    11d9:	7c d2                	jl     11ad <xor_obfuscate+0x14>
    11db:	90                   	nop
    11dc:	90                   	nop
    11dd:	5d                   	pop    %rbp
    11de:	c3                   	ret    

00000000000011df <main>:
    11df:	55                   	push   %rbp
    11e0:	48 89 e5             	mov    %rsp,%rbp
    11e3:	48 81 ec b0 00 00 00 	sub    $0xb0,%rsp
    11ea:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    11f1:	00 00 
    11f3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
    11f7:	31 c0                	xor    %eax,%eax
    11f9:	48 b8 ef be ad 8b 06 	movabs $0x68badbeef,%rax
    1200:	00 00 00 
    1203:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
    120a:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
    1211:	00 
    1212:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
    1219:	00 
    121a:	48 c7 45 c0 00 00 00 	movq   $0x0,-0x40(%rbp)
    1221:	00 
    1222:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
    1229:	00 
    122a:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
    1231:	00 
    1232:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
    1239:	00 
    123a:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
    1241:	00 
    1242:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
    1249:	00 
    124a:	48 8d 05 b7 0d 00 00 	lea    0xdb7(%rip),%rax        # 2008 <_IO_stdin_used+0x8>
    1251:	48 89 c7             	mov    %rax,%rdi
    1254:	e8 d7 fd ff ff       	call   1030 <puts@plt>
    1259:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    125d:	ba 40 00 00 00       	mov    $0x40,%edx
    1262:	48 89 c6             	mov    %rax,%rsi
    1265:	bf 00 00 00 00       	mov    $0x0,%edi
    126a:	e8 f1 fd ff ff       	call   1060 <read@plt>
    126f:	48 8d 05 ac 0d 00 00 	lea    0xdac(%rip),%rax        # 2022 <_IO_stdin_used+0x22>
    1276:	48 89 c7             	mov    %rax,%rdi
    1279:	b8 00 00 00 00       	mov    $0x0,%eax
    127e:	e8 cd fd ff ff       	call   1050 <printf@plt>
    1283:	48 8d 45 b0          	lea    -0x50(%rbp),%rax
    1287:	48 89 c7             	mov    %rax,%rdi
    128a:	b8 00 00 00 00       	mov    $0x0,%eax
    128f:	e8 bc fd ff ff       	call   1050 <printf@plt>
    1294:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
    129b:	89 c7                	mov    %eax,%edi
    129d:	e8 ce fd ff ff       	call   1070 <srand@plt>
    12a2:	48 8d 05 80 0d 00 00 	lea    0xd80(%rip),%rax        # 2029 <_IO_stdin_used+0x29>
    12a9:	48 89 c7             	mov    %rax,%rdi
    12ac:	e8 7f fd ff ff       	call   1030 <puts@plt>
    12b1:	48 8d 05 90 0d 00 00 	lea    0xd90(%rip),%rax        # 2048 <_IO_stdin_used+0x48>
    12b8:	48 89 c7             	mov    %rax,%rdi
    12bb:	e8 70 fd ff ff       	call   1030 <puts@plt>
    12c0:	48 b8 66 65 79 6a 65 	movabs $0x797274656a796566,%rax
    12c7:	74 72 79 
    12ca:	48 ba 4e 72 7e 64 7f 	movabs $0x7d78727f647e724e,%rdx
    12d1:	72 78 7d 
    12d4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
    12db:	48 89 95 78 ff ff ff 	mov    %rdx,-0x88(%rbp)
    12e2:	c7 45 80 4e 7e 61 6c 	movl   $0x6c617e4e,-0x80(%rbp)
    12e9:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
    12f0:	00 
    12f1:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
    12f8:	00 
    12f9:	c7 45 a0 00 00 00 00 	movl   $0x0,-0x60(%rbp)
    1300:	c7 85 5c ff ff ff 00 	movl   $0x0,-0xa4(%rbp)
    1307:	00 00 00 
    130a:	eb 28                	jmp    1334 <main+0x155>
    130c:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1312:	48 98                	cltq   
    1314:	0f b6 84 05 70 ff ff 	movzbl -0x90(%rbp,%rax,1),%eax
    131b:	ff 
    131c:	83 f0 11             	xor    $0x11,%eax
    131f:	89 c2                	mov    %eax,%edx
    1321:	8b 85 5c ff ff ff    	mov    -0xa4(%rbp),%eax
    1327:	48 98                	cltq   
    1329:	88 54 05 90          	mov    %dl,-0x70(%rbp,%rax,1)
    132d:	83 85 5c ff ff ff 01 	addl   $0x1,-0xa4(%rbp)
    1334:	83 bd 5c ff ff ff 13 	cmpl   $0x13,-0xa4(%rbp)
    133b:	7e cf                	jle    130c <main+0x12d>
    133d:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    1344:	00 00 00 
    1347:	e8 44 fd ff ff       	call   1090 <rand@plt>
    134c:	89 85 64 ff ff ff    	mov    %eax,-0x9c(%rbp)
    1352:	48 8d 05 2d 0d 00 00 	lea    0xd2d(%rip),%rax        # 2086 <_IO_stdin_used+0x86>
    1359:	48 89 c7             	mov    %rax,%rdi
    135c:	b8 00 00 00 00       	mov    $0x0,%eax
    1361:	e8 ea fc ff ff       	call   1050 <printf@plt>
    1366:	48 8d 85 58 ff ff ff 	lea    -0xa8(%rbp),%rax
    136d:	48 89 c6             	mov    %rax,%rsi
    1370:	48 8d 05 1e 0d 00 00 	lea    0xd1e(%rip),%rax        # 2095 <_IO_stdin_used+0x95>
    1377:	48 89 c7             	mov    %rax,%rdi
    137a:	b8 00 00 00 00       	mov    $0x0,%eax
    137f:	e8 fc fc ff ff       	call   1080 <__isoc99_scanf@plt>
    1384:	8b 85 58 ff ff ff    	mov    -0xa8(%rbp),%eax
    138a:	39 85 64 ff ff ff    	cmp    %eax,-0x9c(%rbp)
    1390:	75 2a                	jne    13bc <main+0x1dd>
    1392:	b8 02 00 00 00       	mov    $0x2,%eax
    1397:	2b 85 60 ff ff ff    	sub    -0xa0(%rbp),%eax
    139d:	89 c6                	mov    %eax,%esi
    139f:	48 8d 05 f2 0c 00 00 	lea    0xcf2(%rip),%rax        # 2098 <_IO_stdin_used+0x98>
    13a6:	48 89 c7             	mov    %rax,%rdi
    13a9:	b8 00 00 00 00       	mov    $0x0,%eax
    13ae:	e8 9d fc ff ff       	call   1050 <printf@plt>
    13b3:	83 85 60 ff ff ff 01 	addl   $0x1,-0xa0(%rbp)
    13ba:	eb 19                	jmp    13d5 <main+0x1f6>
    13bc:	c7 85 60 ff ff ff 00 	movl   $0x0,-0xa0(%rbp)
    13c3:	00 00 00 
    13c6:	48 8d 05 de 0c 00 00 	lea    0xcde(%rip),%rax        # 20ab <_IO_stdin_used+0xab>
    13cd:	48 89 c7             	mov    %rax,%rdi
    13d0:	e8 5b fc ff ff       	call   1030 <puts@plt>
    13d5:	83 bd 60 ff ff ff 03 	cmpl   $0x3,-0xa0(%rbp)
    13dc:	0f 85 65 ff ff ff    	jne    1347 <main+0x168>
    13e2:	48 8d 45 90          	lea    -0x70(%rbp),%rax
    13e6:	48 89 c6             	mov    %rax,%rsi
    13e9:	48 8d 05 c5 0c 00 00 	lea    0xcc5(%rip),%rax        # 20b5 <_IO_stdin_used+0xb5>
    13f0:	48 89 c7             	mov    %rax,%rdi
    13f3:	b8 00 00 00 00       	mov    $0x0,%eax
    13f8:	e8 53 fc ff ff       	call   1050 <printf@plt>
    13fd:	b8 00 00 00 00       	mov    $0x0,%eax
    1402:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
    1406:	64 48 2b 14 25 28 00 	sub    %fs:0x28,%rdx
    140d:	00 00 
    140f:	74 05                	je     1416 <main+0x237>
    1411:	e8 2a fc ff ff       	call   1040 <__stack_chk_fail@plt>
    1416:	c9                   	leave  
    1417:	c3                   	ret    

Disassembly of section .fini:

0000000000001418 <_fini>:
    1418:	f3 0f 1e fa          	endbr64 
    141c:	48 83 ec 08          	sub    $0x8,%rsp
    1420:	48 83 c4 08          	add    $0x8,%rsp
    1424:	c3                   	ret    
